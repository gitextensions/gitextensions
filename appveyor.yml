version: 3.00.00.{build}

os: Visual Studio 2017

branches:
  except:
    - configdata
    - gh-pages

environment:
  matrix:
  - IdeVersion: VS2017
  SKIP_PAUSE: TRUE
  ARCHIVE_WITH_PDB: TRUE

build:
  verbosity: minimal

cache:
  #- packages -> **\packages.config      # preserve "packages" directory in the root of build folder but will reset it if packages.config is modified
  - packages\WiX.3.11.0 -> Setup\packages.config

install:
- cmd: git submodule update --init --recursive
- cmd: echo /logger:"%ProgramFiles%\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll">> Directory.Build.rsp
- cmd: |-
    cd Setup
    python set_version_to.py -v %APPVEYOR_BUILD_VERSION% -t %APPVEYOR_BUILD_VERSION%Dev@%APPVEYOR_REPO_COMMIT:~0,5%
    cd ..

build_script:
- ps: |
    Write-Output "Platform: $env:IdeVersion"
    & Setup\BuildInstallers.cmd
    if ($LastExitCode -ne 0) { $host.SetShouldExit($LastExitCode) }
    & Setup\MakePortableArchive.cmd Release %APPVEYOR_BUILD_VERSION%
    #Upload a portable archive, not a installer
    Get-ChildItem Setup\GitExtensions-Portable-*.zip | % { Push-AppveyorArtifact $_.FullName -FileName $_.Name }

test_script:
- ps: |
    $testAssemblies = @(
        "UnitTests\GitCommandsTests\bin\Release\GitCommandsTests.dll"
        "UnitTests\GitUITests\bin\Release\GitUITests.dll"
        "UnitTests\Plugins\ReleaseNotesGeneratorTests\bin\Release\ReleaseNotesGeneratorTests.dll"
        "UnitTests\ResourceManagerTests\bin\Release\ResourceManagerTests.dll"
    )
    $packageConfig = [xml](Get-Content .nuget\packages.config)
    $opencover_version = $packageConfig.SelectSingleNode('/packages/package[@id="OpenCover"]').version
    $opencover_console = "packages\OpenCover.$opencover_version\tools\OpenCover.Console.exe"
    &$opencover_console `
        -register:user `
        -returntargetcode `
        -hideskipped:All `
        -filter:"+[*]* -[FluentAssertions*]* -[SmartFormat*]* -[nunit*]*" `
        -excludebyattribute:*.ExcludeFromCodeCoverage* `
        -excludebyfile:*\*Designer.cs `
        -output:"OpenCover.GitExtensions.xml" `
        -target:"nunit3-console.exe" `
        -targetargs:"$testAssemblies"
    if ($LastExitCode -ne 0) { $host.SetShouldExit($LastExitCode) }
    $codecov_version = $packageConfig.SelectSingleNode('/packages/package[@id="Codecov"]').version
    $codecov = "packages\Codecov.$codecov_version\tools\codecov.exe"
    &$codecov -f ".\OpenCover.GitExtensions.xml"
