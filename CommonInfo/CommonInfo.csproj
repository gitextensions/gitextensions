<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <MSBuildCommunityTasksPath>$(SolutionDir)\.build</MSBuildCommunityTasksPath>
    <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">..\</SolutionDir>
    <RestorePackages>true</RestorePackages>
    <ProjectGuid>{28A3A8F1-F01C-4474-986E-8C90D82C1495}</ProjectGuid>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <TargetFrameworkProfile>Client</TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup>
    <OutputType>Exe</OutputType>
  </PropertyGroup>
  <PropertyGroup>
    <StartupObject />
  </PropertyGroup>
  <ItemGroup>
    <Content Include="..\InformationalVersion.txt">
      <Link>InformationalVersion.txt</Link>
    </Content>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="..\CommonAssemblyInfo.cs">
      <Link>CommonAssemblyInfo.cs</Link>
    </Compile>
    <Compile Include="AssemblyInfo.cs" />
    <Compile Include="..\CommonGitInfo.cs">
      <Link>CommonGitInfo.cs</Link>
    </Compile>
  </ItemGroup>
  <Import Project="$(MSBuildCommunityTasksPath)\MSBuild.Community.Tasks.targets" />
  <Target Name="Build">
    <GitVersion LocalPath="$(MSBuildProjectDirectory)">
      <Output TaskParameter="CommitHash" PropertyName="GitHash" />
    </GitVersion>
    <GitPendingChanges LocalPath="$(MSBuildProjectDirectory)">
      <Output TaskParameter="HasPendingChanges" PropertyName="IsDirty" />
    </GitPendingChanges>
    <ReadLinesFromFile File="$(SolutionDir)\InformationalVersion.txt">
      <Output TaskParameter="Lines" PropertyName="InformationalVersion" />
    </ReadLinesFromFile>
    <PropertyGroup Condition=" '$(IsDirty)' == True ">
      <Dirty>-dirty worktree</Dirty>
    </PropertyGroup>
    <PropertyGroup Condition=" '$(IsDirty)'== False ">
      <Dirty>
      </Dirty>
    </PropertyGroup>
    <AssemblyInfo CodeLanguage="CS" OutputFile="$(SolutionDir)\CommonGitInfo.cs" AssemblyInformationalVersion="$(InformationalVersion)-$(GitHash)$(Dirty)" />
  </Target>
  <Import Project="$(SolutionDir)\.nuget\NuGet.targets" Condition="Exists('$(SolutionDir)\.nuget\NuGet.targets')" />
</Project>
