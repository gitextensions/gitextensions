---
 GitCommands/Git/GitCommandsHelper.cs   |  240 +++----
 GitCommands/GitCommands.csproj         |    1 +
 GitCommands/Repository/Repositories.cs |   17 +-
 GitCommands/Strings.cs                 |   19 +-
 GitCommands/patch/PatchFile.cs         |  157 +---
 GitCommands/patch/PatchManager.cs      | 1289 ++++++++++++++------------------
 GitCommands/patch/PatchProcessor.cs    |  207 +++++
 GitExtensions/PluginExtraction.cs      |    5 +-
 GitExtensions/Program.cs               |    5 +-
 GitUI/DvcsGraph.cs                     |   14 +-
 GitCommands/Checkout.cs  				|   32 ---
 cow-head.ico 							|  689 +++++++++++++++++++++++++++++++++-------------------------
 10 files changed, 940 insertions(+), 1014 deletions(-)
 rewrite GitCommands/patch/PatchFile.cs (76%)
 rewrite cow-head.ico (96%)
 create mode 100644 GitCommands/patch/PatchProcessor.cs
 delete mode 100644 GitCommands/Checkout.cs
diff --git a/GitCommands/Checkout.cs b/GitCommands/Checkout.cs
deleted file mode 100644
index 2586c8e..0000000
--- a/GitCommands/Checkout.cs
+++ /dev/null
@@ -1,32 +0,0 @@
-ï»¿using System;
-using System.Collections.Generic;
-
-using System.Text;
-
-namespace GitCommands
-{
-    public class CheckoutDto
-    {
-        public string Name { get; set; }
-        public string Result { get; set; }
-
-        public CheckoutDto(string name)
-        {
-            this.Name = name;
-        }
-    }
-
-    public class Checkout
-    {
-        public CheckoutDto Dto { get; set; }
-        public Checkout(CheckoutDto dto)
-        {
-            this.Dto = dto;
-        }
-
-        public void Execute()
-        {
-            Dto.Result = GitCommandHelpers.RunCmd(Settings.GitCommand, "checkout " + Dto.Name);
-        }
-    }
-}
diff --git a/GitCommands/Git/GitCommandsHelper.cs b/GitCommands/Git/GitCommandsHelper.cs
index 974b03a..a189310 100644
--- a/GitCommands/Git/GitCommandsHelper.cs
+++ b/GitCommands/Git/GitCommandsHelper.cs
@@ -23,7 +23,7 @@ namespace GitCommands
         public static IList<string> GetSubmodulesNames()
         {
             IList<string> submodulesNames = new List<string>();
-            ConfigFile configFile = new ConfigFile(Module.WorkingDir + ".gitmodules");
+            var configFile = new ConfigFile(Module.WorkingDir + ".gitmodules");
             foreach (ConfigSection configSection in configFile.GetConfigSections())
             {
                 submodulesNames.Add(configSection.SubSection);
@@ -34,13 +34,13 @@ namespace GitCommands
 
         public static string GetGlobalSetting(string setting)
         {
-            var configFile = GitCommandHelpers.GetGlobalConfig();
+            var configFile = GetGlobalConfig();
             return configFile.GetValue(setting);
         }
 
         public static void SetGlobalSetting(string setting, string value)
         {
-            var configFile = GitCommandHelpers.GetGlobalConfig();
+            var configFile = GetGlobalConfig();
             configFile.SetValue(setting, value);
             configFile.Save();
         }
@@ -81,8 +81,7 @@ namespace GitCommands
 
         public static Encoding GetLogoutputEncoding()
         {
-            string encodingString;
-            encodingString = GetLocalConfig().GetValue("i18n.logoutputencoding");
+            string encodingString = GetLocalConfig().GetValue("i18n.logoutputencoding");
             if (string.IsNullOrEmpty(encodingString))
                 encodingString = GetGlobalConfig().GetValue("i18n.logoutputencoding");
             if (string.IsNullOrEmpty(encodingString))
@@ -100,10 +99,8 @@ namespace GitCommands
                     throw new Exception(ex.Message + Environment.NewLine + "Unsupported encoding set in git config file: " + encodingString + Environment.NewLine + "Please check the setting i18n.commitencoding in your local and/or global config files. Command aborted.", ex);
                 }
             }
-            else
-            {
-                return Encoding.UTF8;
-            }
+
+            return Encoding.UTF8;
         }
 
         public static string RunCmd(string cmd)
@@ -201,19 +198,19 @@ namespace GitCommands
             Settings.GitLog.Log(cmd + " " + arguments);
             //process used to execute external commands
 
-            var info = new ProcessStartInfo()
-            {
-                UseShellExecute = true,
-                ErrorDialog = false,
-                RedirectStandardOutput = false,
-                RedirectStandardInput = false,
-                CreateNoWindow = false,
-                FileName = cmd,
-                Arguments = arguments,
-                WorkingDirectory = Module.WorkingDir,
-                WindowStyle = ProcessWindowStyle.Normal,
-                LoadUserProfile = true
-            };
+            var info = new ProcessStartInfo
+                           {
+                               UseShellExecute = true,
+                               ErrorDialog = false,
+                               RedirectStandardOutput = false,
+                               RedirectStandardInput = false,
+                               CreateNoWindow = false,
+                               FileName = cmd,
+                               Arguments = arguments,
+                               WorkingDirectory = Module.WorkingDir,
+                               WindowStyle = ProcessWindowStyle.Normal,
+                               LoadUserProfile = true
+                           };
 
             if (waitForExit)
             {
@@ -234,17 +231,17 @@ namespace GitCommands
             {
                 SetEnvironmentVariable();
 
-                var processInfo = new ProcessStartInfo()
-                {
-                    UseShellExecute = false,
-                    RedirectStandardOutput = false,
-                    FileName = cmd,
-                    WorkingDirectory = Module.WorkingDir,
-                    Arguments = arguments,
-                    CreateNoWindow = true
-                };
-
-                using (var process = new Process() { StartInfo = processInfo })
+                var processInfo = new ProcessStartInfo
+                                      {
+                                          UseShellExecute = false,
+                                          RedirectStandardOutput = false,
+                                          FileName = cmd,
+                                          WorkingDirectory = Module.WorkingDir,
+                                          Arguments = arguments,
+                                          CreateNoWindow = true
+                                      };
+
+                using (var process = new Process { StartInfo = processInfo })
                 {
                     process.Start();
                 }
@@ -257,16 +254,16 @@ namespace GitCommands
 
         internal static ProcessStartInfo CreateProcessStartInfo()
         {
-            return new ProcessStartInfo()
-            {
-                UseShellExecute = false,
-                ErrorDialog = false,
-                RedirectStandardOutput = true,
-                RedirectStandardInput = true,
-                RedirectStandardError = true,
-                StandardOutputEncoding = Settings.Encoding,
-                StandardErrorEncoding = Settings.Encoding
-            };
+            return new ProcessStartInfo
+                       {
+                           UseShellExecute = false,
+                           ErrorDialog = false,
+                           RedirectStandardOutput = true,
+                           RedirectStandardInput = true,
+                           RedirectStandardError = true,
+                           StandardOutputEncoding = Settings.Encoding,
+                           StandardErrorEncoding = Settings.Encoding
+                       };
         }
 
         internal static bool UseSsh(string arguments)
@@ -346,17 +343,6 @@ namespace GitCommands
             }
         }
 
-        private static int CreateAndStartProcess(string argument, string cmd)
-        {
-            string stdOutput, stdError;
-            return CreateAndStartProcess(argument, cmd, out stdOutput, out stdError);
-        }
-
-        private static int CreateAndStartProcess(string arguments, string cmd, out string stdOutput, out string stdError)
-        {
-            return  CreateAndStartProcess(arguments, cmd, out stdOutput, out stdError, null);
-        }
-
         private static int CreateAndStartProcess(string arguments, string cmd, out string stdOutput, out string stdError, string stdInput)
         {
             if (string.IsNullOrEmpty(cmd))
@@ -398,21 +384,21 @@ namespace GitCommands
             Settings.GitLog.Log(cmd + " " + arguments);
             //process used to execute external commands
 
-            var info = new ProcessStartInfo()
-            {
-                UseShellExecute = true,
-                ErrorDialog = true,
-                RedirectStandardOutput = false,
-                RedirectStandardInput = false,
-                RedirectStandardError = false,
-
-                LoadUserProfile = true,
-                CreateNoWindow = false,
-                FileName = cmd,
-                Arguments = arguments,
-                WorkingDirectory = Module.WorkingDir,
-                WindowStyle = ProcessWindowStyle.Hidden
-            };
+            var info = new ProcessStartInfo
+                           {
+                               UseShellExecute = true,
+                               ErrorDialog = true,
+                               RedirectStandardOutput = false,
+                               RedirectStandardInput = false,
+                               RedirectStandardError = false,
+
+                               LoadUserProfile = true,
+                               CreateNoWindow = false,
+                               FileName = cmd,
+                               Arguments = arguments,
+                               WorkingDirectory = Module.WorkingDir,
+                               WindowStyle = ProcessWindowStyle.Hidden
+                           };
 
             try
             {
@@ -449,7 +435,7 @@ namespace GitCommands
 
         private static IEnumerable<string> GetUnmergedFileListing()
         {
-            return RunCmd(Settings.GitCommand, "ls-files -z --unmerged").Split(new char[] { '\0', '\n' }, StringSplitOptions.RemoveEmptyEntries);
+            return RunCmd(Settings.GitCommand, "ls-files -z --unmerged").Split(new[] { '\0', '\n' }, StringSplitOptions.RemoveEmptyEntries);
         }
 
         public static bool HandleConflictSelectBase(string fileName)
@@ -504,14 +490,14 @@ namespace GitCommands
                 var fileline = file.Split(new[] { ' ', '\t' });
                 if (fileline.Length < 3)
                     continue;
-                Directory.SetCurrentDirectory(GitCommands.Module.WorkingDir);
-                using (MemoryStream ms = (MemoryStream)GitCommandHelpers.GetFileStream(fileline[1])) //Ugly, has implementation info.
+                Directory.SetCurrentDirectory(Module.WorkingDir);
+                using (var ms = (MemoryStream)GetFileStream(fileline[1])) //Ugly, has implementation info.
                 {
-                  using (FileStream fileOut = File.Create(saveAs))
-                  {
-                    byte[] buf = ms.GetBuffer();
-                    fileOut.Write(buf, 0, buf.Length);
-                  }
+                    using (FileStream fileOut = File.Create(saveAs))
+                    {
+                        byte[] buf = ms.GetBuffer();
+                        fileOut.Write(buf, 0, buf.Length);
+                    }
                 }
                 return true;
             }
@@ -591,29 +577,23 @@ namespace GitCommands
         {
             filename = FixPath(filename);
 
-            string[] fileNames = new string[3];
+            var fileNames = new string[3];
 
-            var unmerged = RunCmd(Settings.GitCommand, "ls-files -z --unmerged \"" + filename + "\"").Split(new char[] { '\0', '\n' }, StringSplitOptions.RemoveEmptyEntries);
+            var unmerged = RunCmd(Settings.GitCommand, "ls-files -z --unmerged \"" + filename + "\"").Split(new[] { '\0', '\n' }, StringSplitOptions.RemoveEmptyEntries);
 
             foreach (var file in unmerged)
             {
-                string fileStage = null;
                 int findSecondWhitespace = file.IndexOfAny(new[] { ' ', '\t' });
-                if (findSecondWhitespace >= 0) fileStage = file.Substring(findSecondWhitespace).Trim();
-                else
-                    fileStage = "";
+                string fileStage = findSecondWhitespace >= 0 ? file.Substring(findSecondWhitespace).Trim() : "";
 
                 findSecondWhitespace = fileStage.IndexOfAny(new[] { ' ', '\t' });
 
-                if (findSecondWhitespace >= 0)
-                    fileStage = fileStage.Substring(findSecondWhitespace).Trim();
-                else
-                    fileStage = "";
+                fileStage = findSecondWhitespace >= 0 ? fileStage.Substring(findSecondWhitespace).Trim() : "";
 
                 int stage;
                 if (Int32.TryParse(fileStage.Trim()[0].ToString(), out stage) && stage >= 1 && stage <= 3 && fileStage.Length > 2)
                 {
-                    fileNames[stage-1] = fileStage.Substring(2);
+                    fileNames[stage - 1] = fileStage.Substring(2);
                 }
             }
 
@@ -692,10 +672,10 @@ namespace GitCommands
         {
             string output = RunCmd(Settings.GitCommand, "log -n 1 --format=format:%P \"" + commit + "\"");
             string[] Parents = output.Split(' ');
-            GitRevision[] ParentsRevisions = new GitRevision[Parents.Length];
+            var ParentsRevisions = new GitRevision[Parents.Length];
             for (int i = 0; i < Parents.Length; i++)
             {
-                string formatString =
+                const string formatString =
                     /* Tree           */ "%T%n" +
                     /* Author Name    */ "%aN%n" +
                     /* Author Date    */ "%ai%n" +
@@ -703,14 +683,16 @@ namespace GitCommands
                     /* Committer Date */ "%ci%n" +
                     /* Commit Message */ "%s";
                 string cmd = "log -n 1 --format=format:" + formatString + " " + Parents[i];
-                var RevInfo = GitCommandHelpers.RunCmd(Settings.GitCommand, cmd);
+                var RevInfo = RunCmd(Settings.GitCommand, cmd);
                 string[] Infos = RevInfo.Split('\n');
-                GitRevision Revision = new GitRevision { 
+                var Revision = new GitRevision
+                {
                     Guid = Parents[i],
                     TreeGuid = Infos[0],
                     Author = Infos[1],
                     Committer = Infos[3],
-                    Message = Infos[5] };
+                    Message = Infos[5]
+                };
                 DateTime Date;
                 DateTime.TryParse(Infos[2], out Date);
                 Revision.AuthorDate = Date;
@@ -1082,7 +1064,7 @@ namespace GitCommands
             if (string.IsNullOrEmpty(fromBranch) && !string.IsNullOrEmpty(toBranch))
                 fromBranch = "HEAD";
 
-            toBranch = toBranch.Replace(" ", "");
+            if (toBranch != null) toBranch = toBranch.Replace(" ", "");
 
             var sforce = "";
             if (force)
@@ -1101,17 +1083,17 @@ namespace GitCommands
             return string.Format("push {0}{1}\"{2}\" {3}", sforce, strack, path.Trim(), fromBranch);
         }
 
-		public static string PushMultipleCmd(string path, IEnumerable<GitPushAction> pushActions)
-		{
-			path = FixPath(path);
+        public static string PushMultipleCmd(string path, IEnumerable<GitPushAction> pushActions)
+        {
+            path = FixPath(path);
 
-			string cmd = string.Format("push \"{0}\"", path.Trim());
+            string cmd = string.Format("push \"{0}\"", path.Trim());
 
-			foreach (GitPushAction action in pushActions)
-				cmd += " " + action.Format();
+            foreach (GitPushAction action in pushActions)
+                cmd += " " + action.Format();
 
-			return cmd;
-		}
+            return cmd;
+        }
 
         public static string PushTagCmd(string path, string tag, bool all)
         {
@@ -1349,16 +1331,14 @@ namespace GitCommands
         {
             if (good)
                 return "bisect good";
-            else
-                return "bisect bad";
+            return "bisect bad";
         }
 
         public static string MarkRevisionBisectCmd(bool good, string revision)
         {
             if (good)
                 return "bisect good " + revision;
-            else
-                return "bisect bad " + revision;
+            return "bisect bad " + revision;
         }
 
         public static string StopBisectCmd()
@@ -1618,7 +1598,7 @@ namespace GitCommands
         {
             var result = RunCachableCmd(Settings.GitCommand, "diff -z --name-status \"" + to + "\" \"" + from + "\"");
 
-            var files = result.Split(new char[] { '\0', '\n' }, StringSplitOptions.RemoveEmptyEntries);
+            var files = result.Split(new[] { '\0', '\n' }, StringSplitOptions.RemoveEmptyEntries);
 
             var diffFiles = new List<GitItemStatus>();
             for (int n = 0; n + 1 < files.Length; n = n + 2)
@@ -1645,7 +1625,7 @@ namespace GitCommands
             var status = RunCmd(Settings.GitCommand,
                                 "ls-files -z --others --directory --no-empty-directory --exclude-standard");
 
-            var statusStrings = status.Split(new char[] { '\0', '\n' }, StringSplitOptions.RemoveEmptyEntries);
+            var statusStrings = status.Split(new[] { '\0', '\n' }, StringSplitOptions.RemoveEmptyEntries);
 
             var gitItemStatusList = new List<GitItemStatus>();
 
@@ -1671,7 +1651,7 @@ namespace GitCommands
         {
             var status = RunCmd(Settings.GitCommand, "ls-files -z --modified --exclude-standard");
 
-            var statusStrings = status.Split(new char[] { '\0', '\n' }, StringSplitOptions.RemoveEmptyEntries);
+            var statusStrings = status.Split(new[] { '\0', '\n' }, StringSplitOptions.RemoveEmptyEntries);
 
             var gitItemStatusList = new List<GitItemStatus>();
 
@@ -1722,7 +1702,7 @@ namespace GitCommands
 
         public static List<GitItemStatus> GetAllChangedFilesFromString(string status)
         {
-            var statusStrings = status.Split(new char[] { '\0', '\n' }, StringSplitOptions.RemoveEmptyEntries);
+            var statusStrings = status.Split(new[] { '\0', '\n' }, StringSplitOptions.RemoveEmptyEntries);
 
             var gitItemStatusList = new List<GitItemStatus>();
 
@@ -1751,7 +1731,7 @@ namespace GitCommands
         {
             var status = RunCmd(Settings.GitCommand, "ls-files -z --deleted --exclude-standard");
 
-            var statusStrings = status.Split(new char[] { '\0', '\n' }, StringSplitOptions.RemoveEmptyEntries);
+            var statusStrings = status.Split(new[] { '\0', '\n' }, StringSplitOptions.RemoveEmptyEntries);
 
             var gitItemStatusList = new List<GitItemStatus>();
 
@@ -1801,7 +1781,7 @@ namespace GitCommands
             }
             else
             {
-                var statusStrings = status.Split(new char[] { '\0', '\n' }, StringSplitOptions.RemoveEmptyEntries);
+                var statusStrings = status.Split(new[] { '\0', '\n' }, StringSplitOptions.RemoveEmptyEntries);
                 for (int n = 0; n + 1 < statusStrings.Length; n = n + 2)
                 {
                     if (string.IsNullOrEmpty(statusStrings[n]))
@@ -2110,7 +2090,7 @@ namespace GitCommands
         public static string[] GetFiles(string filePattern)
         {
             return RunCmd(Settings.GitCommand, "ls-files -z -o -m -c \"" + filePattern + "\"")
-                .Split(new char[] { '\0', '\n' }, StringSplitOptions.RemoveEmptyEntries);
+                .Split(new[] { '\0', '\n' }, StringSplitOptions.RemoveEmptyEntries);
         }
 
         public static List<GitItem> GetFileChanges(string file)
@@ -2160,13 +2140,13 @@ namespace GitCommands
         static public string[] GetFullTree(string id)
         {
             string tree = RunCachableCmd(Settings.GitCommand, string.Format("ls-tree -z -r --name-only {0}", id));
-            return tree.Split(new char[] { '\0', '\n' });
+            return tree.Split(new[] { '\0', '\n' });
         }
         public static List<IGitItem> GetTree(string id)
         {
             var tree = RunCachableCmd(Settings.GitCommand, "ls-tree -z \"" + id + "\"");
 
-            var itemsStrings = tree.Split(new char[] { '\0', '\n' });
+            var itemsStrings = tree.Split(new[] { '\0', '\n' });
 
             var items = new List<IGitItem>();
 
@@ -2276,20 +2256,20 @@ namespace GitCommands
                 Settings.GitLog.Log(Settings.GitCommand + " " + "cat-file blob \"" + id + "\"");
                 //process used to execute external commands
 
-                var info = new ProcessStartInfo()
-                {
-                    UseShellExecute = false,
-                    ErrorDialog = false,
-                    RedirectStandardOutput = true,
-                    RedirectStandardInput = false,
-                    RedirectStandardError = false,
-                    CreateNoWindow = true,
-                    FileName = "\"" + Settings.GitCommand + "\"",
-                    Arguments = "cat-file blob \"" + id + "\"",
-                    WorkingDirectory = Module.WorkingDir,
-                    WindowStyle = ProcessWindowStyle.Normal,
-                    LoadUserProfile = true
-                };
+                var info = new ProcessStartInfo
+                               {
+                                   UseShellExecute = false,
+                                   ErrorDialog = false,
+                                   RedirectStandardOutput = true,
+                                   RedirectStandardInput = false,
+                                   RedirectStandardError = false,
+                                   CreateNoWindow = true,
+                                   FileName = "\"" + Settings.GitCommand + "\"",
+                                   Arguments = "cat-file blob \"" + id + "\"",
+                                   WorkingDirectory = Module.WorkingDir,
+                                   WindowStyle = ProcessWindowStyle.Normal,
+                                   LoadUserProfile = true
+                               };
 
                 using (var process = Process.Start(info))
                 {
@@ -2342,7 +2322,7 @@ namespace GitCommands
 
         public static string MergeBranchCmd(string branch, bool allowFastForward, string strategy)
         {
-            StringBuilder command = new StringBuilder("merge");
+            var command = new StringBuilder("merge");
 
             if (!allowFastForward)
                 command.Append(" --no-ff");
diff --git a/GitCommands/GitCommands.csproj b/GitCommands/GitCommands.csproj
index 3b30d31..6c87a66 100644
--- a/GitCommands/GitCommands.csproj
+++ b/GitCommands/GitCommands.csproj
@@ -67,6 +67,7 @@
     <Compile Include="Config\ConfigFile.cs" />
     <Compile Include="Config\ConfigSection.cs" />
     <Compile Include="Git\GitCommandCache.cs" />
+    <Compile Include="Patch\PatchProcessor.cs" />
     <Compile Include="Repository\Repository.cs" />
     <Compile Include="Repository\RepositoryCategory.cs" />
     <Compile Include="Git\GitBlame.cs" />
diff --git a/GitCommands/Repository/Repositories.cs b/GitCommands/Repository/Repositories.cs
index a30b1fe..54f5219 100644
--- a/GitCommands/Repository/Repositories.cs
+++ b/GitCommands/Repository/Repositories.cs
@@ -59,20 +59,15 @@ namespace GitCommands.Repository
             {
                 if (_repositoryCategories == null)
                 {
-                    try
+                    object setting = Application.UserAppDataRegistry.GetValue("repositories");
+                    if (setting != null)
                     {
-                        object setting = Application.UserAppDataRegistry.GetValue("repositories");
-                        if (setting != null)
-                        {
-                            Repositories.DeserializeRepositories(setting.ToString());
-                        }
+                        DeserializeRepositories(setting.ToString());
                     }
-                    catch
-                    { }
+
                 }
-                if (_repositoryCategories == null)
-                    _repositoryCategories = new BindingList<RepositoryCategory>();
-                return _repositoryCategories;
+
+                return _repositoryCategories ?? (_repositoryCategories = new BindingList<RepositoryCategory>());
             }
             private set
             {
diff --git a/GitCommands/Strings.cs b/GitCommands/Strings.cs
index 0825554..a022725 100644
--- a/GitCommands/Strings.cs
+++ b/GitCommands/Strings.cs
@@ -1,7 +1,4 @@
-ï»¿using System;
-using System.Collections.Generic;
-using System.Text;
-using ResourceManager.Translation;
+ï»¿using ResourceManager.Translation;
 using ResourceManager;
 
 namespace GitCommands
@@ -10,7 +7,7 @@ namespace GitCommands
     {
         public Strings()
         {
-            Translator translator = new Translator(Settings.Translation);
+            var translator = new Translator(Settings.Translation);
             translator.TranslateControl(this);
         }
 
@@ -44,11 +41,11 @@ namespace GitCommands
             return new Strings().commitHashText.Text;
         }
 
-        private TranslationString dateText = new TranslationString("Date");
-        private TranslationString authorText = new TranslationString("Author");
-        private TranslationString authorDateText = new TranslationString("Author date");
-        private TranslationString committerText = new TranslationString("Committer");
-        private TranslationString committerDateText = new TranslationString("Commit date");
-        private TranslationString commitHashText = new TranslationString("Commit hash");
+        private readonly TranslationString dateText = new TranslationString("Date");
+        private readonly TranslationString authorText = new TranslationString("Author");
+        private readonly TranslationString authorDateText = new TranslationString("Author date");
+        private readonly TranslationString committerText = new TranslationString("Committer");
+        private readonly TranslationString committerDateText = new TranslationString("Commit date");
+        private readonly TranslationString commitHashText = new TranslationString("Commit hash");
     }
 }
diff --git a/GitCommands/patch/PatchFile.cs b/GitCommands/patch/PatchFile.cs
dissimilarity index 76%
index 21441af..aed051f 100644
--- a/GitCommands/patch/PatchFile.cs
+++ b/GitCommands/patch/PatchFile.cs
@@ -1,116 +1,41 @@
-ï»¿using System;
-using System.Collections.Generic;
-using System.Text;
-using System.IO;
-
-namespace PatchApply
-{
-    public class PatchFile
-    {
-        private string fullName;
-        public string FullName
-        {
-            get
-            {
-                return fullName;
-            }
-            set
-            {
-                fullName = value;
-            }
-        }
-        private string name;
-        public string Name
-        {
-            get
-            {
-                return name;
-            }
-            set
-            {
-                name = value;
-            }
-        }
-        private string author;
-        public string Author
-        {
-            get
-            {
-                return author;
-            }
-            set
-            {
-                author = value;
-            }
-        }
-        private string subject;
-        public string Subject
-        {
-            get
-            {
-                return subject;
-            }
-            set
-            {
-                subject = value;
-            }
-        }
-        private string date;
-        public string Date
-        {
-            get
-            {
-                return date;
-            }
-            set
-            {
-                date = value;
-            }
-        }
-
-        public string Status
-        {
-            get
-            {
-                if (IsNext)
-                {
-                    return "Next to apply";
-                }
-                if (IsSkipped)
-                {
-                    return "Skipped";
-                }
-                if (!File.Exists(FullName))
-                {
-                    return "Applied";
-                }
-                return "";
-            }
-        }
-
-        private bool isNext;
-        public bool IsNext
-        {
-            get
-            {
-                return isNext;
-            }
-            set
-            {
-                isNext = value;
-            }
-        }
-        private bool isSkipped;
-        public bool IsSkipped
-        {
-            get
-            {
-                return isSkipped;
-            }
-            set
-            {
-                isSkipped = value;
-            }
-        }  
-    }
-}
+ï»¿using System.IO;
+
+namespace PatchApply
+{
+    public class PatchFile
+    {
+        public string FullName { get; set; }
+
+        public string Name { get; set; }
+
+        public string Author { get; set; }
+
+        public string Subject { get; set; }
+
+        public string Date { get; set; }
+
+        public bool IsNext { get; set; }
+
+        public bool IsSkipped { get; set; }
+
+        public string Status
+        {
+            get
+            {
+                if (IsNext)
+                {
+                    return "Next to apply";
+                }
+                if (IsSkipped)
+                {
+                    return "Skipped";
+                }
+                if (!File.Exists(FullName))
+                {
+                    return "Applied";
+                }
+                return "";
+            }
+        }
+    }
+}
diff --git a/GitCommands/patch/PatchManager.cs b/GitCommands/patch/PatchManager.cs
index 531e77b..d5dc637 100644
--- a/GitCommands/patch/PatchManager.cs
+++ b/GitCommands/patch/PatchManager.cs
@@ -1,753 +1,568 @@
-ï»¿using System;
-using System.Collections.Generic;
-using System.IO;
-using GitCommands;
-using System.Text.RegularExpressions;
-
-namespace PatchApply
-{
-    public class PatchManager
-    {
-        public List<Patch> patches = new List<Patch>();
-        public string PatchFileName { get; set; }
-        public string DirToPatch { get; set; }
-
-        public static string GetSelectedLinesAsPatch(string text, int selectionPosition, int selectionLength, bool staged)
+ï»¿using System;
+using System.Collections.Generic;
+using System.IO;
+using GitCommands;
+using System.Text.RegularExpressions;
+
+namespace PatchApply
+{
+    public class PatchManager
+    {
+        public List<Patch> patches = new List<Patch>();
+        public string PatchFileName { get; set; }
+        public string DirToPatch { get; set; }
+
+        private PatchProcessor patchProcessor;
+
+        public PatchManager()
+        {
+            patchProcessor = new PatchProcessor();
+        }
+        
+        public static string GetSelectedLinesAsPatch(string text, int selectionPosition, int selectionLength, bool staged)
         {
             //When there is no patch, return nothing
             if (string.IsNullOrEmpty(text))
-                return null;
-
-            // Ported from the git-gui tcl code to C#
+                return null;
+
+            // Ported from the git-gui tcl code to C#
             // see lib/diff.tcl
 
             if (text.EndsWith("\n\\ No newline at end of file\n"))
-                text = text.Remove(text.Length - "\n\\ No newline at end of file\n".Length);
-
-            // Devide diff into header and patch
-            int patch_pos = text.IndexOf("@@");
-            string header = text.Substring(0, patch_pos);
-            string diff = text.Substring(patch_pos);
-
-            // Get selection position and length
-            int first = selectionPosition - patch_pos;
-            int last = first + selectionLength;
-
-            //Make sure the header is not in the selection
-            if (first < 0)
-            {
-                last += first;
-                first = 0;
-            }
-
-            // Round selection to previous and next line breaks to select the whole lines
-            int first_l = diff.LastIndexOf("\n", first, first) + 1;
+                text = text.Remove(text.Length - "\n\\ No newline at end of file\n".Length);
+
+            // Devide diff into header and patch
+            int patch_pos = text.IndexOf("@@");
+            string header = text.Substring(0, patch_pos);
+            string diff = text.Substring(patch_pos);
+
+            // Get selection position and length
+            int first = selectionPosition - patch_pos;
+            int last = first + selectionLength;
+
+            //Make sure the header is not in the selection
+            if (first < 0)
+            {
+                last += first;
+                first = 0;
+            }
+
+            // Round selection to previous and next line breaks to select the whole lines
+            int first_l = diff.LastIndexOf("\n", first, first) + 1;
             int last_l = diff.IndexOf("\n", last);
             if (last_l == -1)
-                last_l = diff.Length - 1;
-
-            // Are we looking at a diff from the working dir or the staging area
-            char to_context = staged ? '+' : '-';
-
-            // this will hold the entire patch at the end
-            string wholepatch = "";
-
-            // loop until $first_l has reached $last_l
-            // ($first_l is modified inside the loop!)
-            while (first_l < last_l)
-            {
-                // search from $first_l backwards for lines starting with @@
-                int i_l = diff.LastIndexOf("\n@@", first_l, first_l);
-                if (i_l == -1 && diff.Substring(0, 2) != "@@")
-                {
-                    // if there's not a @@ above, then the selected range
-                    // must have come before the first @@
-                    i_l = diff.IndexOf("\n@@", first_l, last_l - first_l);
-                    if (i_l == -1)
-                    {
-                        // if the @@ is not even in the selected range then
-                        // any further action is useless because there is no
-                        // selected data that can be applied
-                        return null;
-                    }
-                }
-                i_l++;
-                // $i_l is now at the beginning of the first @@ line in 
-                // front of first_l
-
-                // pick start line number from hunk header
-                // example: hh = "@@ -604,58 +604,105 @@ foo bar"
-                string hh = diff.Substring(i_l, diff.IndexOf("\n", i_l) - i_l);
-                // example: hh = "@@ -604"
-                hh = hh.Split(',')[0];
-                // example: hlh = "604"
-                string hln = hh.Split('-')[1];
-
-                // There is a special situation to take care of. Consider this
-                // hunk:
-                //
-                //    @@ -10,4 +10,4 @@
-                //     context before
-                //    -old 1
-                //    -old 2
-                //    +new 1
-                //    +new 2
-                //     context after
-                //
-                // We used to keep the context lines in the order they appear in
-                // the hunk. But then it is not possible to correctly stage only
-                // "-old 1" and "+new 1" - it would result in this staged text:
-                //
-                //    context before
-                //    old 2
-                //    new 1
-                //    context after
-                //
-                // (By symmetry it is not possible to *un*stage "old 2" and "new
-                // 2".)
-                //
-                // We resolve the problem by introducing an asymmetry, namely,
-                // when a "+" line is *staged*, it is moved in front of the
-                // context lines that are generated from the "-" lines that are
-                // immediately before the "+" block. That is, we construct this
-                // patch:
-                //
-                //    @@ -10,4 +10,5 @@
-                //     context before
-                //    +new 1
-                //     old 1
-                //     old 2
-                //     context after
-                //
-                // But we do *not* treat "-" lines that are *un*staged in a
-                // special way.
-                //
-                // With this asymmetry it is possible to stage the change "old
-                // 1" -> "new 1" directly, and to stage the change "old 2" ->
-                // "new 2" by first staging the entire hunk and then unstaging
-                // the change "old 1" -> "new 1".
-                //
-                // Applying multiple lines adds complexity to the special
-                // situation.  The pre_context must be moved after the entire
-                // first block of consecutive staged "+" lines, so that
-                // staging both additions gives the following patch:
-                //
-                //    @@ -10,4 +10,6 @@
-                //     context before
-                //    +new 1
-                //    +new 2
-                //     old 1
-                //     old 2
-                //     context after
-
-                // This is non-empty if and only if we are _staging_ changes;
-                // then it accumulates the consecutive "-" lines (after
-                // converting them to context lines) in order to be moved after
-                // "+" change lines.
-                string pre_context = "";
-
-                int n = 0;
-                int m = 0;
-                // move $i_l to the first line after the @@ line $i_l pointed at
-                i_l = diff.IndexOf("\n", i_l) + 1;
-                string patch = "";
-
-                // while $i_l is not at the end of the file and not 
-                // at the next @@ line
-                while (i_l < diff.Length - 1 && diff.Substring(i_l, 2) != "@@")
-                {
-                    // set $next_l to the beginning of the next 
-                    // line after $i_l
+                last_l = diff.Length - 1;
+
+            // Are we looking at a diff from the working dir or the staging area
+            char to_context = staged ? '+' : '-';
+
+            // this will hold the entire patch at the end
+            string wholepatch = "";
+
+            // loop until $first_l has reached $last_l
+            // ($first_l is modified inside the loop!)
+            while (first_l < last_l)
+            {
+                // search from $first_l backwards for lines starting with @@
+                int i_l = diff.LastIndexOf("\n@@", first_l, first_l);
+                if (i_l == -1 && diff.Substring(0, 2) != "@@")
+                {
+                    // if there's not a @@ above, then the selected range
+                    // must have come before the first @@
+                    i_l = diff.IndexOf("\n@@", first_l, last_l - first_l);
+                    if (i_l == -1)
+                    {
+                        // if the @@ is not even in the selected range then
+                        // any further action is useless because there is no
+                        // selected data that can be applied
+                        return null;
+                    }
+                }
+                i_l++;
+                // $i_l is now at the beginning of the first @@ line in 
+                // front of first_l
+
+                // pick start line number from hunk header
+                // example: hh = "@@ -604,58 +604,105 @@ foo bar"
+                string hh = diff.Substring(i_l, diff.IndexOf("\n", i_l) - i_l);
+                // example: hh = "@@ -604"
+                hh = hh.Split(',')[0];
+                // example: hlh = "604"
+                string hln = hh.Split('-')[1];
+
+                // There is a special situation to take care of. Consider this
+                // hunk:
+                //
+                //    @@ -10,4 +10,4 @@
+                //     context before
+                //    -old 1
+                //    -old 2
+                //    +new 1
+                //    +new 2
+                //     context after
+                //
+                // We used to keep the context lines in the order they appear in
+                // the hunk. But then it is not possible to correctly stage only
+                // "-old 1" and "+new 1" - it would result in this staged text:
+                //
+                //    context before
+                //    old 2
+                //    new 1
+                //    context after
+                //
+                // (By symmetry it is not possible to *un*stage "old 2" and "new
+                // 2".)
+                //
+                // We resolve the problem by introducing an asymmetry, namely,
+                // when a "+" line is *staged*, it is moved in front of the
+                // context lines that are generated from the "-" lines that are
+                // immediately before the "+" block. That is, we construct this
+                // patch:
+                //
+                //    @@ -10,4 +10,5 @@
+                //     context before
+                //    +new 1
+                //     old 1
+                //     old 2
+                //     context after
+                //
+                // But we do *not* treat "-" lines that are *un*staged in a
+                // special way.
+                //
+                // With this asymmetry it is possible to stage the change "old
+                // 1" -> "new 1" directly, and to stage the change "old 2" ->
+                // "new 2" by first staging the entire hunk and then unstaging
+                // the change "old 1" -> "new 1".
+                //
+                // Applying multiple lines adds complexity to the special
+                // situation.  The pre_context must be moved after the entire
+                // first block of consecutive staged "+" lines, so that
+                // staging both additions gives the following patch:
+                //
+                //    @@ -10,4 +10,6 @@
+                //     context before
+                //    +new 1
+                //    +new 2
+                //     old 1
+                //     old 2
+                //     context after
+
+                // This is non-empty if and only if we are _staging_ changes;
+                // then it accumulates the consecutive "-" lines (after
+                // converting them to context lines) in order to be moved after
+                // "+" change lines.
+                string pre_context = "";
+
+                int n = 0;
+                int m = 0;
+                // move $i_l to the first line after the @@ line $i_l pointed at
+                i_l = diff.IndexOf("\n", i_l) + 1;
+                string patch = "";
+
+                // while $i_l is not at the end of the file and not 
+                // at the next @@ line
+                while (i_l < diff.Length - 1 && diff.Substring(i_l, 2) != "@@")
+                {
+                    // set $next_l to the beginning of the next 
+                    // line after $i_l
                     int next_l = diff.IndexOf("\n", i_l) + 1;
                     if (next_l == 0)
                     {
                         next_l = diff.Length;
                         m--;
                         n--;
-                    }
-
-                    // get character at $i_l 
-                    char c1 = diff[i_l];
-
-                    // if $i_l is in selected range and the line starts 
-                    // with either - or + this is a line to stage/unstage
-                    if (first_l <= i_l && i_l < last_l && (c1 == '-' || c1 == '+'))
-                    {
-                        // set $ln to the content of the line at $i_l
-                        string ln = diff.Substring(i_l, next_l - i_l);
-                        // if line starts with -
-                        if (c1 == '-')
-                        {
-                            // increase n counter by one
-                            n++;
-                            // update $patch
-                            patch += pre_context + ln;
-                            // reset $pre_context
-                            pre_context = "";
-
-                            // if line starts with +
-                        }
-                        else
-                        {
-                            // increase m counter by one
-                            m++;
-                            // update $patch
-                            patch += ln;
-                        }
-
-                        // if the line doesn't start with either - or +
-                        // this is a context line 
-                    }
-                    else if (c1 != '-' && c1 != '+')
-                    {
-                        // set $ln to the content of the line at $i_l
-                        string ln = diff.Substring(i_l, next_l - i_l);
-                        // update $patch
-                        patch += pre_context + ln;
-                        // increase counters by one each
-                        n++;
-                        m++;
-                        // reset $pre_context
-                        pre_context = "";
-
-                        // if the line starts with $to_context (see earlier)
-                        // the sign at the beginning should be stripped
-                    }
-                    else if (c1 == to_context)
-                    {
-                        // turn change line into context line
-                        string ln = diff.Substring(i_l + 1, next_l - i_l - 1);
-                        if (c1 == '-')
-                            pre_context += " " + ln;
-                        else
-                            patch += " " + ln;
-                        // increase counters by one each
-                        n++;
-                        m++;
-
-                        // if the line starts with the opposite sign of
-                        // $to_context this line should be removed
-                    }
-                    else
-                    {
-                        // a change in the opposite direction of
-                        // to_context which is outside the range of
-                        // lines to apply.
-                        patch += pre_context;
-                        pre_context = "";
-                    }
-                    // set $i_l to the next line
-                    i_l = next_l;
-                }
-                // finished current hunk (reached @@ or file/diff end)
-
-                // update $patch (makes sure $pre_context gets appended)
-                patch += pre_context;
+                    }
+
+                    // get character at $i_l 
+                    char c1 = diff[i_l];
+
+                    // if $i_l is in selected range and the line starts 
+                    // with either - or + this is a line to stage/unstage
+                    if (first_l <= i_l && i_l < last_l && (c1 == '-' || c1 == '+'))
+                    {
+                        // set $ln to the content of the line at $i_l
+                        string ln = diff.Substring(i_l, next_l - i_l);
+                        // if line starts with -
+                        if (c1 == '-')
+                        {
+                            // increase n counter by one
+                            n++;
+                            // update $patch
+                            patch += pre_context + ln;
+                            // reset $pre_context
+                            pre_context = "";
+
+                            // if line starts with +
+                        }
+                        else
+                        {
+                            // increase m counter by one
+                            m++;
+                            // update $patch
+                            patch += ln;
+                        }
+
+                        // if the line doesn't start with either - or +
+                        // this is a context line 
+                    }
+                    else if (c1 != '-' && c1 != '+')
+                    {
+                        // set $ln to the content of the line at $i_l
+                        string ln = diff.Substring(i_l, next_l - i_l);
+                        // update $patch
+                        patch += pre_context + ln;
+                        // increase counters by one each
+                        n++;
+                        m++;
+                        // reset $pre_context
+                        pre_context = "";
+
+                        // if the line starts with $to_context (see earlier)
+                        // the sign at the beginning should be stripped
+                    }
+                    else if (c1 == to_context)
+                    {
+                        // turn change line into context line
+                        string ln = diff.Substring(i_l + 1, next_l - i_l - 1);
+                        if (c1 == '-')
+                            pre_context += " " + ln;
+                        else
+                            patch += " " + ln;
+                        // increase counters by one each
+                        n++;
+                        m++;
+
+                        // if the line starts with the opposite sign of
+                        // $to_context this line should be removed
+                    }
+                    else
+                    {
+                        // a change in the opposite direction of
+                        // to_context which is outside the range of
+                        // lines to apply.
+                        patch += pre_context;
+                        pre_context = "";
+                    }
+                    // set $i_l to the next line
+                    i_l = next_l;
+                }
+                // finished current hunk (reached @@ or file/diff end)
+
+                // update $patch (makes sure $pre_context gets appended)
+                patch += pre_context;
                 // update $wholepatch with the current hunk
-                wholepatch += "@@ -" + hln + "," + n.ToString() + " +" + hln + "," + m.ToString() + " @@\n" + patch;
-
-                // set $first_l to first line after the next @@ line
-                first_l = diff.IndexOf("\n", i_l) + 1;
-                if (first_l == 0)
-                    break;
-            }
-            // we are almost done, $wholepatch should no contain all the 
-            // (modified) hunks
-
-            return header + wholepatch;
-        }
-
-
-        public string LoadFile(string fileName)
-        {
-            try
-            {
-                StreamReader re = new StreamReader(DirToPatch + fileName, Settings.Encoding);
-                // string retval = re.ReadToEnd();
-                // GetMD5Hash(retval);
-                string retval = "";
-                string line;
-                while ((line = re.ReadLine()) != null)
-                {
-                    retval += line + "\n"; ;
-                }
-                re.Close();
-
-                if (retval.Length > 0 && retval[retval.Length - 1] == '\n')
-                    retval = retval.Remove(retval.Length - 1, 1);
-
-                return retval;
-            }
-            catch
-            {
-            }
-            return "";
-        }
-
-        public void SavePatch()
-        {
-            foreach (Patch patch in patches)
-            {
-                if (!patch.Apply)
-                    continue;
-                string path = DirToPatch + patch.FileNameA;
-                if (patch.Type == Patch.PatchType.DeleteFile)
-                {
-                    File.Delete(path);
-                }
-                else
-                {                    
-                    Directory.CreateDirectory(path.Substring(0, path.LastIndexOfAny(((String)"\\/").ToCharArray())));
-                    TextWriter tw = new StreamWriter(DirToPatch + patch.FileNameA, false);
-                    tw.Write(patch.FileTextB);
-                    tw.Close();
-                }
-            }
-        }
-
-        public string GetMD5Hash(string input)
-        {
-            byte[] bs = GetUTF8EncodedBytes(input);
-            var s = new System.Text.StringBuilder();
-            foreach (byte b in bs)
-            {
-                s.Append(b.ToString("x2").ToLower());
-            }
-            return s.ToString();
-        }
-
-        private byte[] GetUTF8EncodedBytes(string input)
-        {
-            var x = new System.Security.Cryptography.MD5CryptoServiceProvider();
-            byte[] bs = System.Text.Encoding.UTF8.GetBytes(input);
-            bs = x.ComputeHash(bs);
-            return bs;
-        }
-
-
-        public void ApplyPatch(Patch patch)
-        {
-            patch.FileTextB = "";
-            patch.Rate = 100;
-
-            if (patch.Type == Patch.PatchType.DeleteFile)
-            {
-                handleDeletePatchType(patch);
-                return;
-            }
-
-            if (patch.Text == null)
-                return;
-
-            string[] patchLines = patch.Text.Split('\n');
-
-            if (patch.Type == Patch.PatchType.NewFile)
-            {
-                handleNewFilePatchType(patch, patchLines);
-                return;
-            }
-
-            if (patch.Type == Patch.PatchType.ChangeFile)
-            {
-                handleChangeFilePatchType(patch, patchLines);
-                return;
-            }
-        }
-
-        private void handleChangeFilePatchType(Patch patch, string[] patchLines)
-        {
-            List<string> fileLines = new List<string>();
-            foreach (string s in LoadFile(patch.FileNameA).Split('\n'))
-            {
-                fileLines.Add(s);
-            }
-
-            int lineNumber = 0;
-            foreach (string line in patchLines)
-            {
-                //Parse fist line
-                //@@ -1,4 +1,4 @@
-                if (line.StartsWith("@@") && line.LastIndexOf("@@") > 0)
-                {
-                    string pos = line.Substring(3, line.LastIndexOf("@@") - 3).Trim();
-                    string[] addrem = pos.Split('+', '-');
-                    string[] oldLines = addrem[1].Split(',');
-                    string[] newLines = addrem[2].Split(',');
-
-                    lineNumber = Int32.Parse(oldLines[0]) - 1;
-
-                    //line = line.Substring(line.LastIndexOf("@@") + 3));
-                    continue;
-                }
-
-                if (line.StartsWith(" "))
-                {
-                    //Do some extra checks
-                    if (line.Length > 0)
-                    {
-                        if (fileLines.Count > lineNumber && fileLines[lineNumber].CompareTo(line.Substring(1)) != 0)
-                            patch.Rate -= 20;
-                    }
-                    else
-                    {
-                        if (fileLines.Count > lineNumber && fileLines[lineNumber] != "")
-                            patch.Rate -= 20;
-                    }
-
-                    lineNumber++;
-                }
-                if (line.StartsWith("-"))
-                {
-                    if (line.Length > 0)
-                    {
-                        if (fileLines.Count > lineNumber && fileLines[lineNumber].CompareTo(line.Substring(1)) != 0)
-                            patch.Rate -= 20;
-                    }
-                    else
-                    {
-                        if (fileLines.Count > lineNumber && fileLines[lineNumber] != "")
-                            patch.Rate -= 20;
-                    }
-
-                    patch.Bookmarks.Add(lineNumber);
-
-                    if (fileLines.Count > lineNumber)
-                        fileLines.RemoveAt(lineNumber);
-                    else
-                        patch.Rate -= 20;
-
-                    //lineNumber++;
-                }
-                if (line.StartsWith("+"))
-                {
-                    string insertLine = "";
-                    if (line.Length > 1)
-                        insertLine = line.Substring(1);
-
-                    //Is the patch allready applied?
-                    if (fileLines.Count > lineNumber && fileLines[lineNumber].CompareTo(insertLine) == 0)
-                    {
-                        patch.Rate -= 20;
-                    }
-
-                    fileLines.Insert(lineNumber, insertLine);
-                    patch.Bookmarks.Add(lineNumber);
-
-                    lineNumber++;
-                }
-            }
-            foreach (string patchedLine in fileLines)
-            {
-                patch.FileTextB += patchedLine + "\n";
-            }
-            if (patch.FileTextB.Length > 0 && patch.FileTextB[patch.FileTextB.Length - 1] == '\n')
-                patch.FileTextB = patch.FileTextB.Remove(patch.FileTextB.Length - 1, 1);
-
-            if (patch.Rate != 100)
-                patch.Apply = false;
-        }
-
-        private void handleNewFilePatchType(Patch patch, string[] patchLines)
-        {
-            foreach (string line in patchLines)
-            {
-                if (line.Length > 0 && line.StartsWith("+"))
-                {
-                    if (line.Length > 4 && line.StartsWith("+Ã¯Â»Â¿"))
-                        patch.AppendText(line.Substring(4));
-                    else
-                        if (line.Length > 1)
-                            patch.FileTextB += line.Substring(1);
-
-                    patch.FileTextB += "\n";
-                }
-            }
-            if (patch.FileTextB.Length > 0 && patch.FileTextB[patch.FileTextB.Length - 1] == '\n')
-                patch.FileTextB = patch.FileTextB.Remove(patch.FileTextB.Length - 1, 1);
-            patch.Rate = 100;
-
-            if (File.Exists(DirToPatch + patch.FileNameB))
-            {
-                patch.Rate -= 40;
-                patch.Apply = false;
-            }
-        }
-
-        private void handleDeletePatchType(Patch patch)
-        {
-            patch.FileTextB = "";
-            patch.Rate = 100;
-
-            if (!File.Exists(DirToPatch + patch.FileNameA))
-            {
-                patch.Rate -= 40;
-                patch.Apply = false;
-            }
-        }
-
-        public void LoadPatch(string text, bool applyPatch)
-        {
-            try
-            {
-                StringReader stream = new StringReader(text);
-                LoadPatchStream(stream, applyPatch);
-            }
-            catch
-            {
-            }
-
-        }
-
-        public void LoadPatchFile(bool applyPatch)
-        {
-            try
-            {
-                StreamReader re = new StreamReader(PatchFileName, Settings.Encoding);
-                LoadPatchStream(re, applyPatch);
-            }
-            catch
-            {
-            }
-        }
-
-        public void LoadPatchStream(TextReader reader, bool applyPatch)
-        {
-            patches = new List<Patch>();
-            Patch patch = null;
-           
-            string input = reader.ReadLine();
-
-            processInput(reader, input, patch);
-
-            reader.Close();
-
-            if (!applyPatch)
-                return;
-
-            foreach (Patch patchApply in patches)
-            {
-                if (patchApply.Apply)
-                    ApplyPatch(patchApply);
-            }
-        }
-
-        private void processInput(TextReader re, string input, Patch patch)
-        {
-            bool gitPatch = false;
-            while (input != null)
-            {
-                //diff --git a/FileA b/FileB
-                //new patch found
-                if (input.StartsWith("diff --git "))
-                {
-                    gitPatch = true;
-                    patch = new Patch();
-                    patches.Add(patch);
-
-                    Match match = Regex.Match(input, "[ ][\\\"]{0,1}[a]/(.*)[\\\"]{0,1}[ ][\\\"]{0,1}[b]/(.*)[\\\"]{0,1}");
-
-                    patch.FileNameA = match.Groups[1].Value;
-                    patch.FileNameB = match.Groups[2].Value;
-                    //patch.FileNameA = input.Substring(input.LastIndexOf(" a/") + 3, input.LastIndexOf(" b/") - (input.LastIndexOf(" a/") + 3));
-                    //patch.FileNameB = input.Substring(input.LastIndexOf(" b/") + 3);
-
-                    //The next line tells us what kind of patch
-                    //new file mode xxxxxx means new file
-                    //delete file mode xxxxxx means delete file
-                    //index means -> no new and no delete, edit
-                    if ((input = re.ReadLine()) != null)
-                    {
-                        //WTF! No change
-                        if (input.StartsWith("diff --git "))
-                        {
-                            //No change? lets continue to the next line
-                            continue;
-                        }
-
-                        //new file!
-                        if (input.StartsWith("new file mode "))
-                            patch.Type = Patch.PatchType.NewFile;
-                        else
-                            if (input.StartsWith("deleted file mode "))
-                                patch.Type = Patch.PatchType.DeleteFile;
-                            else
-                                patch.Type = Patch.PatchType.ChangeFile;
-
-                        //we need to move to the line that says 'index'
-                        //because we are not sure if we are there yet because
-                        //we might point at the new or delete line lines
-                        if (!input.StartsWith("index "))
-                            if ((input = re.ReadLine()) == null)
-                                break;
-                    }
-
-                    //The next lines tells us more about the change itself
-                    //Read the next
-                    if ((input = re.ReadLine()) != null)
-                    {
-                        //Binary files a/FileA and /dev/null differ
-                        //means the file is deleted but the changes are not listed explicid
-                        if (input.StartsWith("Binary files a/") && input.EndsWith(" and /dev/null differ"))
-                        {
-                            patch.File = Patch.FileType.Binary;
-
-                            //Check if the type was set correctly
-                            if (patch.Type != Patch.PatchType.DeleteFile)
-                                throw new Exception("Change not parsed correct: " + input);
-
-                            patch = null;
-
-                            if ((input = re.ReadLine()) == null)
-                                break;
-
-                            //Continue loop, we do not get more info about this change
-                            continue;
-                        }
-
-                        //Binary files a/FileA and /dev/null differ
-                        //means the file is deleted but the changes are not listed explicid
-                        if (input.StartsWith("Binary files /dev/null and b/") && input.EndsWith(" differ"))
-                        {
-                            patch.File = Patch.FileType.Binary;
-
-                            //Check if the type was set correctly
-                            if (patch.Type != Patch.PatchType.NewFile)
-                                throw new Exception("Change not parsed correct: " + input);
-
-                            //TODO: NOT SUPPORTED!
-                            patch.Apply = false;
-
-                            patch = null;
-
-                            if ((input = re.ReadLine()) == null)
-                                break;
-
-                            continue;
-                        }
-
-                        //GIT binary patch
-                        //means the file is binairy 
-                        if (input.StartsWith("GIT binary patch"))
-                        {
-                            patch.File = Patch.FileType.Binary;
-
-                            //TODO: NOT SUPPORTED!
-                            patch.Apply = false;
-
-                            patch = null;
-
-                            if ((input = re.ReadLine()) == null)
-                                break;
-
-                            continue;
-                        }
-                    }
-
-                    continue;
-                }
-
-                if (!gitPatch || gitPatch && patch != null)
-                {
-                    //The previous check checked only if the file was binary
-                    //--- /dev/null
-                    //means there is no old file, so this should be a new file
-                    if (input.StartsWith("--- /dev/null"))
-                    {
-                        if (!gitPatch)
-                        {
-                            patch = new Patch();
-                            patches.Add(patch);
-                        }
-
-                        if (gitPatch && patch.Type != Patch.PatchType.NewFile)
-                            throw new Exception("Change not parsed correct: " + input);
-
-                        //This line is parsed, NEXT!
-                        if ((input = re.ReadLine()) == null)
-                            break;
-
-                    }
-
-                    //line starts with --- means, old file name
-                    if (input.StartsWith("--- a/") && !input.StartsWith("--- /dev/null"))
-                    {
-                        if (!gitPatch)
-                        {
-                            patch = new Patch();
-                            patches.Add(patch);
-                        }
-
-                        if (gitPatch && patch.FileNameA != (input.Substring(6).Trim()))
-                            throw new Exception("Old filename not parsed correct: " + input);
-
-                        patch.FileNameA = (input.Substring(6).Trim());
-
-                        //This line is parsed, NEXT!
-                        if ((input = re.ReadLine()) == null)
-                            break;
-
-                    }
-
-                    //If there is no 'newfile', reset files
-                    if (input.StartsWith("+++ /dev/null"))
-                    {
-                        if (gitPatch && patch.Type != Patch.PatchType.DeleteFile)
-                            throw new Exception("Change not parsed correct: " + input);
-
-                        //This line is parsed, NEXT!
-                        if ((input = re.ReadLine()) == null)
-                            break;
-                    }
-
-
-                    //line starts with +++ means, new file name
-                    //we expect a new file now!
-                    if (input.StartsWith("+++ ") && !input.StartsWith("+++ /dev/null"))
-                    {
-                        Match regexMatch = Regex.Match(input, "[+]{3}[ ][\\\"]{0,1}[b]/(.*)[\\\"]{0,1}");
-
-                        if (gitPatch && patch.FileNameB != (regexMatch.Groups[1].Value.Trim()))
-                            throw new Exception("New filename not parsed correct: " + input);
-
-                        patch.FileNameB = (regexMatch.Groups[1].Value.Trim());
-
-                        //This line is parsed, NEXT!
-                        if ((input = re.ReadLine()) == null)
-                            break;
-                    }
-                }
-
-                if (patch != null)
-                    patch.AppendTextLine(input);
-
-                if ((input = re.ReadLine()) == null)
-                    break;
-            }
-        }
-
-        /// <summary>
-        /// Counts number of characters on all lines in file up to line number specified.
-        /// Currently doesn't check if line > lines.Length.
-        /// Probably not be including newline characters in the count.
-        /// Not set up to handle DOS (CR LF) line endings.
-        /// 
-        /// Assumes file is a text file and that line < lines.Length
-        /// </summary>
-        /// <param name="file">file we want to contain lines from</param>
-        /// <param name="line">line number we want to count up to</param>
-        /// <returns></returns>
-        public int LineToChar(string file, int line)
-        {
-            string[] lines = file.Split('\n');
-
-            int retVal = 0;
-
-            for (int n = 0; n < line; n++)
-            {
-                retVal += lines[n].Length;
-            }
-
-            return retVal;
-        }
-    }
+                wholepatch += "@@ -" + hln + "," + n.ToString() + " +" + hln + "," + m.ToString() + " @@\n" + patch;
+
+                // set $first_l to first line after the next @@ line
+                first_l = diff.IndexOf("\n", i_l) + 1;
+                if (first_l == 0)
+                    break;
+            }
+            // we are almost done, $wholepatch should no contain all the 
+            // (modified) hunks
+
+            return header + wholepatch;
+        }
+
+
+        public string LoadFile(string fileName)
+        {
+            try
+            {
+                var re = new StreamReader(DirToPatch + fileName, Settings.Encoding);
+                // string retval = re.ReadToEnd();
+                // GetMD5Hash(retval);
+                string retval = "";
+                string line;
+                while ((line = re.ReadLine()) != null)
+                {
+                    retval += line + "\n"; ;
+                }
+                re.Close();
+
+                if (retval.Length > 0 && retval[retval.Length - 1] == '\n')
+                    retval = retval.Remove(retval.Length - 1, 1);
+
+                return retval;
+            }
+            catch
+            {
+                return "";
+            }
+        }
+
+        public void SavePatch()
+        {
+            foreach (Patch patch in patches)
+            {
+                if (!patch.Apply)
+                    continue;
+                string path = DirToPatch + patch.FileNameA;
+                if (patch.Type == Patch.PatchType.DeleteFile)
+                {
+                    File.Delete(path);
+                }
+                else
+                {
+                    Directory.CreateDirectory(path.Substring(0, path.LastIndexOfAny(((String)"\\/").ToCharArray())));
+                    TextWriter tw = new StreamWriter(DirToPatch + patch.FileNameA, false);
+                    tw.Write(patch.FileTextB);
+                    tw.Close();
+                }
+            }
+        }
+
+        public string GetMD5Hash(string input)
+        {
+            IEnumerable<byte> bs = GetUTF8EncodedBytes(input);
+            var s = new System.Text.StringBuilder();
+            foreach (byte b in bs)
+            {
+                s.Append(b.ToString("x2").ToLower());
+            }
+            return s.ToString();
+        }
+
+        private static IEnumerable<byte> GetUTF8EncodedBytes(string input)
+        {
+            var x = new System.Security.Cryptography.MD5CryptoServiceProvider();
+            byte[] bs = System.Text.Encoding.UTF8.GetBytes(input);
+            bs = x.ComputeHash(bs);
+            return bs;
+        }
+
+
+        public void ApplyPatch(Patch patch)
+        {
+            patch.FileTextB = "";
+            patch.Rate = 100;
+
+            if (patch.Type == Patch.PatchType.DeleteFile)
+            {
+                handleDeletePatchType(patch);
+                return;
+            }
+
+            if (patch.Text == null)
+                return;
+
+            string[] patchLines = patch.Text.Split('\n');
+
+            if (patch.Type == Patch.PatchType.NewFile)
+            {
+                handleNewFilePatchType(patch, patchLines);
+                return;
+            }
+
+            if (patch.Type == Patch.PatchType.ChangeFile)
+            {
+                handleChangeFilePatchType(patch, patchLines);
+                return;
+            }
+        }
+
+        private void handleChangeFilePatchType(Patch patch, string[] patchLines)
+        {
+            var fileLines = new List<string>();
+            foreach (string s in LoadFile(patch.FileNameA).Split('\n'))
+            {
+                fileLines.Add(s);
+            }
+
+            int lineNumber = 0;
+            foreach (string line in patchLines)
+            {
+                //Parse fist line
+                //@@ -1,4 +1,4 @@
+                if (line.StartsWith("@@") && line.LastIndexOf("@@") > 0)
+                {
+                    string pos = line.Substring(3, line.LastIndexOf("@@") - 3).Trim();
+                    string[] addrem = pos.Split('+', '-');
+                    string[] oldLines = addrem[1].Split(',');
+
+                    lineNumber = Int32.Parse(oldLines[0]) - 1;
+
+                    //line = line.Substring(line.LastIndexOf("@@") + 3));
+                    continue;
+                }
+
+                if (line.StartsWith(" "))
+                {
+                    //Do some extra checks
+                    if (line.Length > 0)
+                    {
+                        if (fileLines.Count > lineNumber && fileLines[lineNumber].CompareTo(line.Substring(1)) != 0)
+                            patch.Rate -= 20;
+                    }
+                    else
+                    {
+                        if (fileLines.Count > lineNumber && fileLines[lineNumber] != "")
+                            patch.Rate -= 20;
+                    }
+
+                    lineNumber++;
+                }
+                if (line.StartsWith("-"))
+                {
+                    if (line.Length > 0)
+                    {
+                        if (fileLines.Count > lineNumber && fileLines[lineNumber].CompareTo(line.Substring(1)) != 0)
+                            patch.Rate -= 20;
+                    }
+                    else
+                    {
+                        if (fileLines.Count > lineNumber && fileLines[lineNumber] != "")
+                            patch.Rate -= 20;
+                    }
+
+                    patch.Bookmarks.Add(lineNumber);
+
+                    if (fileLines.Count > lineNumber)
+                        fileLines.RemoveAt(lineNumber);
+                    else
+                        patch.Rate -= 20;
+
+                    //lineNumber++;
+                }
+                if (line.StartsWith("+"))
+                {
+                    string insertLine = "";
+                    if (line.Length > 1)
+                        insertLine = line.Substring(1);
+
+                    //Is the patch allready applied?
+                    if (fileLines.Count > lineNumber && fileLines[lineNumber].CompareTo(insertLine) == 0)
+                    {
+                        patch.Rate -= 20;
+                    }
+
+                    fileLines.Insert(lineNumber, insertLine);
+                    patch.Bookmarks.Add(lineNumber);
+
+                    lineNumber++;
+                }
+            }
+            foreach (string patchedLine in fileLines)
+            {
+                patch.FileTextB += patchedLine + "\n";
+            }
+            if (patch.FileTextB.Length > 0 && patch.FileTextB[patch.FileTextB.Length - 1] == '\n')
+                patch.FileTextB = patch.FileTextB.Remove(patch.FileTextB.Length - 1, 1);
+
+            if (patch.Rate != 100)
+                patch.Apply = false;
+        }
+
+        private void handleNewFilePatchType(Patch patch, string[] patchLines)
+        {
+            foreach (string line in patchLines)
+            {
+                if (line.Length > 0 && line.StartsWith("+"))
+                {
+                    if (line.Length > 4 && line.StartsWith("+Ã¯Â»Â¿"))
+                        patch.AppendText(line.Substring(4));
+                    else
+                        if (line.Length > 1)
+                            patch.FileTextB += line.Substring(1);
+
+                    patch.FileTextB += "\n";
+                }
+            }
+            if (patch.FileTextB.Length > 0 && patch.FileTextB[patch.FileTextB.Length - 1] == '\n')
+                patch.FileTextB = patch.FileTextB.Remove(patch.FileTextB.Length - 1, 1);
+            patch.Rate = 100;
+
+            if (File.Exists(DirToPatch + patch.FileNameB))
+            {
+                patch.Rate -= 40;
+                patch.Apply = false;
+            }
+        }
+
+        private void handleDeletePatchType(Patch patch)
+        {
+            patch.FileTextB = "";
+            patch.Rate = 100;
+
+            if (!File.Exists(DirToPatch + patch.FileNameA))
+            {
+                patch.Rate -= 40;
+                patch.Apply = false;
+            }
+        }
+
+        public void LoadPatch(string text, bool applyPatch)
+        {
+            try
+            {
+                using (var stream = new StringReader(text))
+                {
+                    LoadPatchStream(stream, applyPatch);
+                }
+            }
+            catch
+            {
+            }
+
+        }
+
+        public void LoadPatchFile(bool applyPatch)
+        {
+            try
+            {
+                using (var re = new StreamReader(PatchFileName, Settings.Encoding))
+                {
+                    LoadPatchStream(re, applyPatch);
+                }
+            }
+            catch
+            {
+            }
+        }
+
+        public void LoadPatchStream(TextReader reader, bool applyPatch)
+        {
+            Patch patch = null;
+
+            string input = reader.ReadLine();
+
+            patches = patchProcessor.ProcessInput(reader, input, patch);
+
+            reader.Close();
+
+            if (!applyPatch)
+                return;
+
+            foreach (Patch patchApply in patches)
+            {
+                if (patchApply.Apply)
+                    ApplyPatch(patchApply);
+            }
+        }
+
+        /// <summary>
+        /// Counts number of characters on all lines in file up to line number specified.
+        /// Currently doesn't check if line > lines.Length.
+        /// Probably not be including newline characters in the count.
+        /// Not set up to handle DOS (CR LF) line endings.
+        /// 
+        /// Assumes file is a text file and that line < lines.Length
+        /// </summary>
+        /// <param name="file">file we want to contain lines from</param>
+        /// <param name="line">line number we want to count up to</param>
+        /// <returns></returns>
+        public int LineToChar(string file, int line)
+        {
+            string[] lines = file.Split('\n');
+
+            int retVal = 0;
+
+            for (int n = 0; n < line; n++)
+            {
+                retVal += lines[n].Length;
+            }
+
+            return retVal;
+        }
+    }
 }
\ No newline at end of file
diff --git a/GitCommands/patch/PatchProcessor.cs b/GitCommands/patch/PatchProcessor.cs
new file mode 100644
index 0000000..681fe7b
--- /dev/null
+++ b/GitCommands/patch/PatchProcessor.cs
@@ -0,0 +1,207 @@
+using System;
+using System.Collections.Generic;
+using System.IO;
+using System.Text.RegularExpressions;
+
+namespace PatchApply
+{
+    public class PatchProcessor
+    {
+        public List<Patch> ProcessInput(TextReader re, string input, Patch patch)
+        {
+            var patches = new List<Patch>();
+            bool gitPatch = false;
+            while (input != null)
+            {
+                //diff --git a/FileA b/FileB
+                //new patch found
+                if (input.StartsWith("diff --git "))
+                {
+                    gitPatch = true;
+                    patch = new Patch();
+                    patches.Add(patch);
+
+                    Match match = Regex.Match(input,
+                                              "[ ][\\\"]{0,1}[a]/(.*)[\\\"]{0,1}[ ][\\\"]{0,1}[b]/(.*)[\\\"]{0,1}");
+
+                    patch.FileNameA = match.Groups[1].Value;
+                    patch.FileNameB = match.Groups[2].Value;
+                    //patch.FileNameA = input.Substring(input.LastIndexOf(" a/") + 3, input.LastIndexOf(" b/") - (input.LastIndexOf(" a/") + 3));
+                    //patch.FileNameB = input.Substring(input.LastIndexOf(" b/") + 3);
+
+                    //The next line tells us what kind of patch
+                    //new file mode xxxxxx means new file
+                    //delete file mode xxxxxx means delete file
+                    //index means -> no new and no delete, edit
+                    if ((input = re.ReadLine()) != null)
+                    {
+                        //WTF! No change
+                        if (input.StartsWith("diff --git "))
+                        {
+                            //No change? lets continue to the next line
+                            continue;
+                        }
+
+                        //new file!
+                        if (input.StartsWith("new file mode "))
+                            patch.Type = Patch.PatchType.NewFile;
+                        else if (input.StartsWith("deleted file mode "))
+                            patch.Type = Patch.PatchType.DeleteFile;
+                        else
+                            patch.Type = Patch.PatchType.ChangeFile;
+
+                        //we need to move to the line that says 'index'
+                        //because we are not sure if we are there yet because
+                        //we might point at the new or delete line lines
+                        if (!input.StartsWith("index "))
+                            if ((input = re.ReadLine()) == null)
+                                break;
+                    }
+
+                    //The next lines tells us more about the change itself
+                    //Read the next
+                    if ((input = re.ReadLine()) != null)
+                    {
+                        //Binary files a/FileA and /dev/null differ
+                        //means the file is deleted but the changes are not listed explicid
+                        if (input.StartsWith("Binary files a/") && input.EndsWith(" and /dev/null differ"))
+                        {
+                            patch.File = Patch.FileType.Binary;
+
+                            //Check if the type was set correctly
+                            if (patch.Type != Patch.PatchType.DeleteFile)
+                                throw new Exception("Change not parsed correct: " + input);
+
+                            patch = null;
+
+                            if ((input = re.ReadLine()) == null)
+                                break;
+
+                            //Continue loop, we do not get more info about this change
+                            continue;
+                        }
+
+                        //Binary files a/FileA and /dev/null differ
+                        //means the file is deleted but the changes are not listed explicid
+                        if (input.StartsWith("Binary files /dev/null and b/") && input.EndsWith(" differ"))
+                        {
+                            patch.File = Patch.FileType.Binary;
+
+                            //Check if the type was set correctly
+                            if (patch.Type != Patch.PatchType.NewFile)
+                                throw new Exception("Change not parsed correct: " + input);
+
+                            //TODO: NOT SUPPORTED!
+                            patch.Apply = false;
+
+                            patch = null;
+
+                            if ((input = re.ReadLine()) == null)
+                                break;
+
+                            continue;
+                        }
+
+                        //GIT binary patch
+                        //means the file is binairy 
+                        if (input.StartsWith("GIT binary patch"))
+                        {
+                            patch.File = Patch.FileType.Binary;
+
+                            //TODO: NOT SUPPORTED!
+                            patch.Apply = false;
+
+                            patch = null;
+
+                            if ((input = re.ReadLine()) == null)
+                                break;
+
+                            continue;
+                        }
+                    }
+
+                    continue;
+                }
+
+                if (!gitPatch || patch != null)
+                {
+                    //The previous check checked only if the file was binary
+                    //--- /dev/null
+                    //means there is no old file, so this should be a new file
+                    if (input.StartsWith("--- /dev/null"))
+                    {
+                        if (!gitPatch)
+                        {
+                            patch = new Patch();
+                            patches.Add(patch);
+                        }
+
+                        if (gitPatch && patch.Type != Patch.PatchType.NewFile)
+                            throw new Exception("Change not parsed correct: " + input);
+
+                        //This line is parsed, NEXT!
+                        if ((input = re.ReadLine()) == null)
+                            break;
+
+                    }
+
+                    //line starts with --- means, old file name
+                    if (input.StartsWith("--- a/") && !input.StartsWith("--- /dev/null"))
+                    {
+                        if (!gitPatch)
+                        {
+                            patch = new Patch();
+                            patches.Add(patch);
+                        }
+
+                        if (gitPatch && patch.FileNameA != (input.Substring(6).Trim()))
+                            throw new Exception("Old filename not parsed correct: " + input);
+
+                        patch.FileNameA = (input.Substring(6).Trim());
+
+                        //This line is parsed, NEXT!
+                        if ((input = re.ReadLine()) == null)
+                            break;
+
+                    }
+
+                    //If there is no 'newfile', reset files
+                    if (input.StartsWith("+++ /dev/null"))
+                    {
+                        if (gitPatch && patch.Type != Patch.PatchType.DeleteFile)
+                            throw new Exception("Change not parsed correct: " + input);
+
+                        //This line is parsed, NEXT!
+                        if ((input = re.ReadLine()) == null)
+                            break;
+                    }
+
+
+                    //line starts with +++ means, new file name
+                    //we expect a new file now!
+                    if (input.StartsWith("+++ ") && !input.StartsWith("+++ /dev/null"))
+                    {
+                        Match regexMatch = Regex.Match(input, "[+]{3}[ ][\\\"]{0,1}[b]/(.*)[\\\"]{0,1}");
+
+                        if (gitPatch && patch.FileNameB != (regexMatch.Groups[1].Value.Trim()))
+                            throw new Exception("New filename not parsed correct: " + input);
+
+                        patch.FileNameB = (regexMatch.Groups[1].Value.Trim());
+
+                        //This line is parsed, NEXT!
+                        if ((input = re.ReadLine()) == null)
+                            break;
+                    }
+                }
+
+                if (patch != null)
+                    patch.AppendTextLine(input);
+
+                if ((input = re.ReadLine()) == null)
+                    break;
+            }
+
+            return patches;
+        }
+    }
+}
\ No newline at end of file
diff --git a/GitExtensions/PluginExtraction.cs b/GitExtensions/PluginExtraction.cs
index 9277613..d02605a 100644
--- a/GitExtensions/PluginExtraction.cs
+++ b/GitExtensions/PluginExtraction.cs
@@ -24,8 +24,9 @@ namespace GitExtensions
                 gitPlugin.Settings = new GitPluginSettingsContainer(gitPlugin.Description);
                 gitPlugin.Register(UICommands);
 
-                if (gitPlugin is IRepositoryHostPlugin)
-                    RepoHosts.GitHosters.Add(gitPlugin as IRepositoryHostPlugin);
+                var gitRepositoryHostPlugin = gitPlugin as IRepositoryHostPlugin;
+                if (gitRepositoryHostPlugin != null)
+                    RepoHosts.GitHosters.Add(gitRepositoryHostPlugin);
 
                 LoadedPlugins.Plugins.Add(gitPlugin);
             }
diff --git a/GitExtensions/Program.cs b/GitExtensions/Program.cs
index a191c6f..88eaad6 100644
--- a/GitExtensions/Program.cs
+++ b/GitExtensions/Program.cs
@@ -34,7 +34,10 @@ namespace GitExtensions
 
             if (string.IsNullOrEmpty(Settings.Translation))
             {
-                new FormChooseTranslation().ShowDialog();
+                using (var formChoose = new FormChooseTranslation())
+                {
+                    formChoose.ShowDialog();
+                }
             }
 
             try
diff --git a/GitUI/DvcsGraph.cs b/GitUI/DvcsGraph.cs
index f879a5d..1f827a6 100644
--- a/GitUI/DvcsGraph.cs
+++ b/GitUI/DvcsGraph.cs
@@ -90,10 +90,12 @@ namespace GitUI
             syncContext = SynchronizationContext.Current;
             graphData = new Graph();
 
-            backgroundThread = new Thread(backgroundThreadEntry);
-            backgroundThread.IsBackground = true;
-            backgroundThread.Priority = ThreadPriority.BelowNormal;
-            backgroundThread.Name = "DvcsGraph.backgroundThread";
+            backgroundThread = new Thread(backgroundThreadEntry)
+                                   {
+                                       IsBackground = true,
+                                       Priority = ThreadPriority.BelowNormal,
+                                       Name = "DvcsGraph.backgroundThread"
+                                   };
             backgroundThread.Start();
 
             InitializeComponent();
@@ -351,7 +353,7 @@ namespace GitUI
                     }
                 }
 
-                return (i == graphData.Count ? -1 : i);
+                return i == graphData.Count ? -1 : i;
             }
         }
 
@@ -637,7 +639,7 @@ namespace GitUI
                 if (dataGridColumnGraph.Visible)
                 {
                     int laneCount = 2;
-                    if (graphData != null /* && FirstDisplayedCell != null*/)
+                    if (graphData != null)
                     {
                         int width = 1;
                         int start = VerticalScrollBar.Value / rowHeight;
diff --git a/cow-head.ico b/cow-head.ico
dissimilarity index 96%
index ed9fdb3e79033f22f0da3da5e3bd5c9f4f709da8..541a44728f1b628a04cae8835666a3cca4492d1a 100644
GIT binary patch
literal 105588
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

literal 87474
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
SRY6I3jiel0J?nZIjQ<C4GIT2d
-- 
1.7.3.1.msysgit.0

