<?xml version="1.0" encoding="utf-8"?>
<!-- Licensed to the .NET Foundation under one or more agreements. The .NET Foundation licenses this file to you under the MIT license. See the LICENSE file in the project root for more information. -->
<Project>

  <UsingTask TaskName="_GetAvailableTranslationsCodeTask" TaskFactory="RoslynCodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll" >
    <ParameterGroup>
      <TranslationFolder ParameterType="System.String" Required="true"/>
      <Output ParameterType="Microsoft.Build.Framework.ITaskItem[]" Output="true"/>
    </ParameterGroup>
    <Task>
      <Reference Include="Microsoft.Build"/>
      <Using Namespace="Microsoft.Build.Construction"/>
      <Using Namespace="Microsoft.Build.Evaluation"/>
      <Code Type="Fragment" Language="cs">
        <![CDATA[
        Output = Directory.GetFiles(TranslationFolder, "*.xlf")
                          .Where(file =>
                          {
                            var fileName = Path.GetFileNameWithoutExtension(file);
                            return !fileName.StartsWith("en_pseudo") && !fileName.EndsWith(".Plugins");
                          })
                          .SelectMany(file =>
                          {
                            if (!File.Exists(file.Replace(".xlf", ".Plugins.xlf"))) {
                              return Enumerable.Empty<string>();
                            }
                            return new[] {
                              file,
                              file.Replace(".xlf", ".Plugins.xlf"),
                              file.Replace(".xlf", ".gif")
                            };
                          })
                         .Select(file => new TaskItem(file))
                         .ToArray();
      ]]>
      </Code>
    </Task>
  </UsingTask>

</Project>
