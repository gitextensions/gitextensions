<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Description" xml:space="preserve">
    <value>Usuwanie przestarzałych gałęzi</value>
  </data>
  <data name="DaysOlderThan" xml:space="preserve">
    <value>Usuń przestarzałe gałęzie, starsze niż (dni)</value>
  </data>
  <data name="DeleteRemoteBranchesFromFlag" xml:space="preserve">
    <value>Usuń przestarzałe gałęzie ze zdalnego</value>
  </data>
  <data name="IncludeUnmergedBranchesFlag" xml:space="preserve">
    <value>Usuń niescalone gałęzie</value>
  </data>
  <data name="MergedInBranch" xml:space="preserve">
    <value>Gałąź, do której powinny zostać scalone inne</value>
  </data>
  <data name="RegexCaseInsensitiveFlag" xml:space="preserve">
    <value>Rozróżnianie wielkości liter w filtrze regex</value>
  </data>
  <data name="RegexFilter" xml:space="preserve">
    <value>Regex filtrowania gałęzi do usunięcia</value>
  </data>
  <data name="RegexInvertedFlag" xml:space="preserve">
    <value>Znajdź gałęzie, które nie pasują do filtru regex</value>
  </data>
  <data name="RemoteName" xml:space="preserve">
    <value>Usuń zdalne nazwy przestarzałych gałęzi z</value>
  </data>
  <data name="UseRegexToFilterBranchesFlag" xml:space="preserve">
    <value>Użyj regex do filtrowania gałęzi do usunięcia</value>
  </data>
  <data name="FormText" xml:space="preserve">
    <value>Usuwanie przestarzałych gałęzi</value>
  </data>
  <data name="Author" xml:space="preserve">
    <value>Ostatni autor</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Zamknij</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Usuń</value>
  </data>
  <data name="IncludeRemoteBranches" xml:space="preserve">
    <value>Usuń zdalne gałęzie z</value>
  </data>
  <data name="Message" xml:space="preserve">
    <value>Ostatnia wiadomość</value>
  </data>
  <data name="RefreshBtn" xml:space="preserve">
    <value>Szukaj gałęzi</value>
  </data>
  <data name="AreYouSureToDelete" xml:space="preserve">
    <value>Na pewno chcesz usunąć {0} wybranych gałęzi?</value>
  </data>
  <data name="BranchesSelected" xml:space="preserve">
    <value>Wybrano {0}/{1} gałęzi.</value>
  </data>
  <data name="CancelText" xml:space="preserve">
    <value>Anuluj</value>
  </data>
  <data name="ChooseBranchesToDeleteText" xml:space="preserve">
    <value>Wybierz gałęzie do usunięcia. Tylko gałęzie całkowicie scalone do '{0}' mogą zostać usunięte.</value>
  </data>
  <data name="DangerousActionText" xml:space="preserve">
    <value>NIEBEZPIECZNA OPERACJA!
Gałęzie zostaną usunięte na zdalnym '{0}'. Nie można tego cofnąć.
Na pewno chcesz kontynuować?</value>
  </data>
  <data name="DeleteCaption" xml:space="preserve">
    <value>Usuń</value>
  </data>
  <data name="DeletingBranchesText" xml:space="preserve">
    <value>Usuwanie gałęzi...</value>
  </data>
  <data name="DeletingUnmergedBranchesText" xml:space="preserve">
    <value>Usuwanie niescalonych gałęzi może spowodować osamotnienie zatwierdzeń. Używać z ostrożnością!</value>
  </data>
  <data name="LoadingText" xml:space="preserve">
    <value>Ładowanie...</value>
  </data>
  <data name="PressToSearchText" xml:space="preserve">
    <value>Naciśnij '{0}', aby szukać gałęzi do usunięcia.</value>
  </data>
  <data name="SearchBranchesText" xml:space="preserve">
    <value>Szukaj gałęzi</value>
  </data>
  <data name="SelectBranchesToDeleteText" xml:space="preserve">
    <value>Wybierz gałęzie do usunięcia przy pomocy pól wyboru w kolumnie '{0}'.</value>
  </data>
  <data name="ButtonSettingsText" xml:space="preserve">
    <value>Ustawienia</value>
  </data>
  <data name="DateDataGridViewTextBoxColumn" xml:space="preserve">
    <value>Ostatnia aktywność</value>
  </data>
  <data name="IncludeUnmergedBranchesText" xml:space="preserve">
    <value>Dołącz niescalone gałęzie</value>
  </data>
  <data name="Label1Text" xml:space="preserve">
    <value>Usuń gałęzie starsze niż x dni</value>
  </data>
  <data name="Label2Text" xml:space="preserve">
    <value>Usuń gałęzie w pełni scalone do gałęzi</value>
  </data>
  <data name="NameDataGridViewTextBoxColumn" xml:space="preserve">
    <value>Nazwa</value>
  </data>
  <data name="RegexDoesNotMatch" xml:space="preserve">
    <value>Nie pasuje</value>
  </data>
  <data name="RegexFilter" xml:space="preserve">
    <value>/(funkcja|rozwijanie)/</value>
  </data>
  <data name="UseRegexCaseInsensitive" xml:space="preserve">
    <value>Bez znaczenia wielkości</value>
  </data>
  <data name="UseRegexFilter" xml:space="preserve">
    <value>Wykorzystaj regex do filtrowania gałęzi</value>
  </data>
</root>