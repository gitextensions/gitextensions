<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Description" xml:space="preserve">
    <value>Smazat zastaralé větve</value>
  </data>
  <data name="DaysOlderThan" xml:space="preserve">
    <value>Smazat zastaralé větve starší než (dní)</value>
  </data>
  <data name="DeleteRemoteBranchesFromFlag" xml:space="preserve">
    <value>Smazat větev ze vzdáleného repozitáře</value>
  </data>
  <data name="IncludeUnmergedBranchesFlag" xml:space="preserve">
    <value>Smazat nesloučené větve</value>
  </data>
  <data name="MergedInBranch" xml:space="preserve">
    <value>Větev ve které mají být sloučeny všechny větve</value>
  </data>
  <data name="RegexCaseInsensitiveFlag" xml:space="preserve">
    <value>Is regex filter case insensitive?</value>
  </data>
  <data name="RegexFilter" xml:space="preserve">
    <value>Regex to filter branches to delete</value>
  </data>
  <data name="RegexInvertedFlag" xml:space="preserve">
    <value>Search branches that does not match regex</value>
  </data>
  <data name="RemoteName" xml:space="preserve">
    <value>Remote name obsoleted branches should be deleted from</value>
  </data>
  <data name="UseRegexToFilterBranchesFlag" xml:space="preserve">
    <value>K filtrování větví ke smazaní použít regulérní výraz</value>
  </data>
  <data name="FormText" xml:space="preserve">
    <value>Smazat zastaralé větve</value>
  </data>
  <data name="Author" xml:space="preserve">
    <value>Poslední autor</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Zavřít</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Smazat</value>
  </data>
  <data name="IncludeRemoteBranches" xml:space="preserve">
    <value>Smazat vzdálené větve z</value>
  </data>
  <data name="Message" xml:space="preserve">
    <value>Poslední zpráva</value>
  </data>
  <data name="RefreshBtn" xml:space="preserve">
    <value>Prohledat větve</value>
  </data>
  <data name="AreYouSureToDelete" xml:space="preserve">
    <value>Opravdu chcete smazat {0} vybrané větve?</value>
  </data>
  <data name="BranchesSelected" xml:space="preserve">
    <value>Větví vybráno {0}/{1}.</value>
  </data>
  <data name="CancelText" xml:space="preserve">
    <value>Storno</value>
  </data>
  <data name="ChooseBranchesToDeleteText" xml:space="preserve">
    <value>Vyberte větve ke smazání. Smazány mohou být pouze větve které jsou plně sloučeny ve větvi '{0}'.</value>
  </data>
  <data name="DangerousActionText" xml:space="preserve">
    <value>NEBEZPEČNÁ AKCE!
Tyto větve budou smazány ve vzdáleném zdroji '{0}'. Tato akce nelze vrátit.
Opravdu chcete pokračovat?</value>
  </data>
  <data name="DeleteCaption" xml:space="preserve">
    <value>Smazat</value>
  </data>
  <data name="DeletingBranchesText" xml:space="preserve">
    <value>Mažu větve...</value>
  </data>
  <data name="DeletingUnmergedBranchesText" xml:space="preserve">
    <value>Smazání nesloučených větví bude mít za následek 'plandavé' odevzdání. Dávejte pozor!</value>
  </data>
  <data name="LoadingText" xml:space="preserve">
    <value>Načítám...</value>
  </data>
  <data name="PressToSearchText" xml:space="preserve">
    <value>Pro vyhledání větví ke smazání zmáčkněte '{0}'.</value>
  </data>
  <data name="SearchBranchesText" xml:space="preserve">
    <value>Prohledat větve</value>
  </data>
  <data name="SelectBranchesToDeleteText" xml:space="preserve">
    <value>Vyberte větve ke smazání pomocí zatržítek ve sloupci '{0}'.</value>
  </data>
  <data name="ButtonSettingsText" xml:space="preserve">
    <value>Nastavení</value>
  </data>
  <data name="DateDataGridViewTextBoxColumn" xml:space="preserve">
    <value>Poslední aktivita</value>
  </data>
  <data name="IncludeUnmergedBranchesText" xml:space="preserve">
    <value>Včetně nesloučených větví</value>
  </data>
  <data name="Label1Text" xml:space="preserve">
    <value>Smazat větve starší než x dní</value>
  </data>
  <data name="Label2Text" xml:space="preserve">
    <value>Smazat větve plně sloučené do větve</value>
  </data>
  <data name="NameDataGridViewTextBoxColumn" xml:space="preserve">
    <value>Název</value>
  </data>
  <data name="RegexDoesNotMatch" xml:space="preserve">
    <value>Nesouhlasí</value>
  </data>
  <data name="RegexFilter" xml:space="preserve">
    <value>/(feature|develop)/</value>
  </data>
  <data name="UseRegexCaseInsensitive" xml:space="preserve">
    <value>Citlivé na velikost písmen</value>
  </data>
  <data name="UseRegexFilter" xml:space="preserve">
    <value>K filtrování větví použít regulérní výraz</value>
  </data>
</root>