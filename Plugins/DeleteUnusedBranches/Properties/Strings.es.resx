<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Description" xml:space="preserve">
    <value>Eliminar ramas obsoletas</value>
  </data>
  <data name="DaysOlderThan" xml:space="preserve">
    <value>Eliminar ramas obsoletas anteriores a (días)</value>
  </data>
  <data name="DeleteRemoteBranchesFromFlag" xml:space="preserve">
    <value>Eliminar ramas obsoletas del remoto</value>
  </data>
  <data name="IncludeUnmergedBranchesFlag" xml:space="preserve">
    <value>Eliminar ramas sin fusionar</value>
  </data>
  <data name="MergedInBranch" xml:space="preserve">
    <value>Rama con la que todas las ramas deben ser fusionadas</value>
  </data>
  <data name="RegexCaseInsensitiveFlag" xml:space="preserve">
    <value>El filtro de expresiones regulares, ¿distingue mayúsculas de minúsculas?</value>
  </data>
  <data name="RegexFilter" xml:space="preserve">
    <value>Expresión regular para filtrar las ramas a ser borradas</value>
  </data>
  <data name="RegexInvertedFlag" xml:space="preserve">
    <value>Buscar ramas que no coincidan con la expresión regular</value>
  </data>
  <data name="RemoteName" xml:space="preserve">
    <value>Nombre del repositorio remoto a partir del cual las ramas obsoletas deben ser borradas</value>
  </data>
  <data name="UseRegexToFilterBranchesFlag" xml:space="preserve">
    <value>Usá una expresión regular para filtrar las ramas que se van a eliminar</value>
  </data>
  <data name="FormText" xml:space="preserve">
    <value>Eliminar ramas obsoletas</value>
  </data>
  <data name="Author" xml:space="preserve">
    <value>Último autor</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cerrar</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Eliminar</value>
  </data>
  <data name="IncludeRemoteBranches" xml:space="preserve">
    <value>Borrar ramas remotas en</value>
  </data>
  <data name="Message" xml:space="preserve">
    <value>Último mensaje</value>
  </data>
  <data name="RefreshBtn" xml:space="preserve">
    <value>Buscar ramas</value>
  </data>
  <data name="AreYouSureToDelete" xml:space="preserve">
    <value>Está seguro que quiere eliminar {0} ramas seleccionadas?</value>
  </data>
  <data name="BranchesSelected" xml:space="preserve">
    <value>{0}/{1} ramas seleccionadas.</value>
  </data>
  <data name="CancelText" xml:space="preserve">
    <value>Cancelar</value>
  </data>
  <data name="ChooseBranchesToDeleteText" xml:space="preserve">
    <value>Escoja ramas a eliminar. Sólo ramas que hayan sido completamente fusionadas con '{0}' serán borradas.</value>
  </data>
  <data name="DangerousActionText" xml:space="preserve">
    <value>¡ACCIÓN PELIGROSA!
Las ramas serán eliminadas en el servidor remoto '{0}'. Esta acción no puede deshacerse. ¿Está seguro de que desea continuar?</value>
  </data>
  <data name="DeleteCaption" xml:space="preserve">
    <value>Eliminar</value>
  </data>
  <data name="DeletingBranchesText" xml:space="preserve">
    <value>Eliminando ramas...</value>
  </data>
  <data name="DeletingUnmergedBranchesText" xml:space="preserve">
    <value>Eliminar ramas sin fusionar resultará en commits colgados. ¡Use con cuidado!</value>
  </data>
  <data name="LoadingText" xml:space="preserve">
    <value>Cargando...</value>
  </data>
  <data name="PressToSearchText" xml:space="preserve">
    <value>Presione '{0}' para buscar ramas a borrar.</value>
  </data>
  <data name="SearchBranchesText" xml:space="preserve">
    <value>Buscar ramas</value>
  </data>
  <data name="SelectBranchesToDeleteText" xml:space="preserve">
    <value>Selecciona las ramas a borrar usando los Checkbox en la columna '{0}'.</value>
  </data>
  <data name="ButtonSettingsText" xml:space="preserve">
    <value>Configuración</value>
  </data>
  <data name="DateDataGridViewTextBoxColumn" xml:space="preserve">
    <value>Actividad más reciente</value>
  </data>
  <data name="IncludeUnmergedBranchesText" xml:space="preserve">
    <value>Incluir ramas sin fusionar</value>
  </data>
  <data name="Label1Text" xml:space="preserve">
    <value>Eliminar ramas más antiguas de x días.</value>
  </data>
  <data name="Label2Text" xml:space="preserve">
    <value>Eliminar ramas completamente fusionadas con la rama</value>
  </data>
  <data name="NameDataGridViewTextBoxColumn" xml:space="preserve">
    <value>Nombre</value>
  </data>
  <data name="RegexDoesNotMatch" xml:space="preserve">
    <value>No coincide</value>
  </data>
  <data name="RegexFilter" xml:space="preserve">
    <value>/(feature|develop)/</value>
  </data>
  <data name="UseRegexCaseInsensitive" xml:space="preserve">
    <value>Insensible a mayúsculas</value>
  </data>
  <data name="UseRegexFilter" xml:space="preserve">
    <value>Usar regex para filtrar ramas</value>
  </data>
</root>